// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Compare API components alphabetizes properties 1`] = `
"
  ### @test/parcel-test-app/src/index.tsx:Alphabetize
  
#### @test/parcel-test-app/src/index.tsx:Alphabetize
+Alphabetize {
+  bar: string
+  foo: string
+}

  -----------------------------------
  "
`;

exports[`Compare API components can add a new interface that did not previously exist 1`] = `
"
  ### @test/parcel-test-app/src/index.tsx:Foo
  
#### @test/parcel-test-app/src/index.tsx:Foo
+Foo {
+  bar: number
+}

  -----------------------------------
  "
`;

exports[`Compare API components can extend other interfaces 1`] = `
"
  ### @test/parcel-test-app/src/index.tsx:SpectrumToastContainerProps
  
#### @test/parcel-test-app/src/index.tsx:SpectrumToastContainerProps
+SpectrumToastContainerProps {
+  bar: number
+}

  -----------------------------------
  "
`;

exports[`Compare API components can extend other interfaces with no properties 1`] = `
"
  ### @test/parcel-test-app/src/index.tsx:ComponentProps
  
#### @test/parcel-test-app/src/index.tsx:ComponentProps
+ComponentProps extends RefObject {
+}

  -----------------------------------
  "
`;

exports[`Compare API components can handle top level exported identifiers 1`] = `
"
  ### @test/parcel-test-app/src/index.tsx:theme
  
#### @test/parcel-test-app/src/index.tsx:theme
-theme: number
+theme: Key

  -----------------------------------
  "
`;

exports[`Compare API components can remove a new interface that did not previously exist 1`] = `
"
  ### @test/parcel-test-app/src/index.tsx:Foo
  
#### @test/parcel-test-app/src/index.tsx:Foo
-Foo {
-  bar: number
-}

  -----------------------------------
  "
`;

exports[`Compare API components compares non template to template version 1`] = `
"
  ### @test/parcel-test-app/src/index.tsx:TableColumnResizeState
  
#### @test/parcel-test-app/src/index.tsx:TableColumnResizeState
-TableColumnResizeState {
+TableColumnResizeState<T> {
   getColumnMaxWidth: (Key) => number
   getColumnMinWidth: (Key) => number
   getColumnWidth: (Key) => number
-  onColumnResize: (Key, number) => void
+  onColumnResize: (Key, number) => Map<Key, number>
   onColumnResizeEnd: (Key) => void
   onColumnResizeStart: (Key) => void
+  resizingColumn: Key | null
+  tableState: TableState<T>
   widths: Map<Key, number>
 }

  -----------------------------------
  "
`;

exports[`Compare API components does not change parameter order 1`] = `
"
  ### @test/parcel-test-app/src/index.tsx:fooConcat
  
#### @test/parcel-test-app/src/index.tsx:fooConcat
+fooConcat {
+  foo: string
+  bar: string
+  returnVal: string
+}

  -----------------------------------
  "
`;

exports[`Compare API components does not change type parameter order 1`] = `
"
  ### @test/parcel-test-app/src/index.tsx:ComponentProps
  
#### @test/parcel-test-app/src/index.tsx:ComponentProps
+ComponentProps<T, C> {
+  bar: C
+  foo: T
+}

  -----------------------------------
  "
`;

exports[`Compare API components follows dependencies 1`] = `
"
  ### @test/parcel-test-app/src/index.tsx:AppOpts
  
#### @test/parcel-test-app/src/index.tsx:AppOpts
 
 interface AppOpts {
-id: string
+id: number
 }
it changed:
- @test/parcel-test-app/src/index.tsx:App1


  -----------------------------------
  "
`;

exports[`Compare API components handles mapped types 1`] = `
"
  ### @test/parcel-test-app/src/index.tsx:Mutable
  
#### @test/parcel-test-app/src/index.tsx:Mutable
+Mutable {
+  -readonly[P in keyof T]: T[P]
+}

  -----------------------------------
  "
`;

exports[`Compare API components handles return values 1`] = `
"
  ### @test/parcel-test-app/src/index.tsx:Bar
  
#### @test/parcel-test-app/src/index.tsx:Bar
+Bar {
+  props: {
+val: number
+}
+  returnVal: null
+}

  -----------------------------------
  "
`;

exports[`Compare API components handles return values that are functions 1`] = `
"
  ### @test/parcel-test-app/src/index.tsx:Bar
  
#### @test/parcel-test-app/src/index.tsx:Bar
+Bar {
+  props: {
+val: number
+}
+  returnVal: () => void
+}

  -----------------------------------
  "
`;

exports[`Compare API components indents interface properties correctly 1`] = `
"
  ### @test/parcel-test-app/src/index.tsx:DateSegment
  
#### @test/parcel-test-app/src/index.tsx:DateSegment
+DateSegment {
+  isEditable: boolean
+  isPlaceholder: boolean
+  maxValue?: number
+  minValue?: number
+  placeholder: string
+  text: string
+  type: SegmentType
+  value?: number
+}

  -----------------------------------
  "
`;

exports[`Compare API components writes export entry for React component 1`] = `
"
  ### @test/parcel-test-app/src/index.tsx:App1
  
#### @test/parcel-test-app/src/index.tsx:App1
 App1 {
-  id: string
+  id: number
 }

  -----------------------------------
  "
`;

exports[`Compare API interface merging merges properties when extending 1`] = `
"
  ### @test/parcel-test-app/src/index.tsx:State
  
#### @test/parcel-test-app/src/index.tsx:State
+State {
+  foo: Foo
+  isValid: boolean
+}

  -----------------------------------
  "
`;

exports[`Compare API interface merging merges properties when extending with generics and Omit 1`] = `
"
  ### @test/parcel-test-app/src/index.tsx:SpectrumTagGroupProps
  
#### @test/parcel-test-app/src/index.tsx:SpectrumTagGroupProps
+SpectrumTagGroupProps<T> {
+  actionLabel?: string
+  errorMessage: string
+  isValid: boolean
+  node: T
+  onAction?: () => void
+}

  -----------------------------------
  "
`;

exports[`Compare API interface merging merges properties when extending with nested extends 1`] = `
"
  ### @test/parcel-test-app/src/index.tsx:State
  
#### @test/parcel-test-app/src/index.tsx:State
+State {
+  foo: Foo
+  isValid: boolean
+  showErrorIcon: boolean
+}

  -----------------------------------
  "
`;

exports[`Compare API interface merging merges properties when extending with nested extends even for empty interfaces 1`] = `
"
  ### @test/parcel-test-app/src/index.tsx:State
  
#### @test/parcel-test-app/src/index.tsx:State
+State {
+  foo: Foo
+  isValid: boolean
+}

  -----------------------------------
  "
`;

exports[`Compare API interface merging other packages merges properties when extending with generics from other modules 1`] = `
"
 packages/@react-types/shared/src/dom.d.ts:RouterConfig
  
#### packages/@react-types/shared/src/dom.d.ts:RouterConfig
-
-interface RouterConfig {
-
-}
it changed:
- @test/parcel-test-app/src/index.tsx:SpectrumTagGroupProps


  -----------------------------------
  


 packages/@react-types/shared/src/dom.d.ts:Href
  
#### packages/@react-types/shared/src/dom.d.ts:Href
-type Href = {
-  RouterConfig extends {
-href: infer [object Object]
-} ? H : string
-}
it changed:
- @test/parcel-test-app/src/index.tsx:SpectrumTagGroupProps


  -----------------------------------
  


 packages/@react-types/shared/src/dom.d.ts:RouterOptions
  
#### packages/@react-types/shared/src/dom.d.ts:RouterOptions
-type RouterOptions = {
-  RouterConfig extends {
-routerOptions: infer [object Object]
-} ? O : never
-}
it changed:
- @test/parcel-test-app/src/index.tsx:SpectrumTagGroupProps


  -----------------------------------
  


 packages/@react-types/shared/src/collections.d.ts:ItemProps
  
#### packages/@react-types/shared/src/collections.d.ts:ItemProps
-
-interface ItemProps {
-children: ReactNode
-title?: ReactNode
-textValue?: string
-aria-label?: string
-childItems?: Iterable<T>
-hasChildItems?: boolean
-href?: Href
-hrefLang?: string
-target?: HTMLAttributeAnchorTarget
-rel?: string
-download?: boolean | string
-ping?: string
-referrerPolicy?: HTMLAttributeReferrerPolicy
-routerOptions?: RouterOptions
-}
it changed:
- @test/parcel-test-app/src/index.tsx:SpectrumTagGroupProps


  -----------------------------------
  


 packages/@react-types/shared/src/collections.d.ts:ItemElement
  
#### packages/@react-types/shared/src/collections.d.ts:ItemElement
-type ItemElement = {
-  ReactElement<ItemProps<T>>
-}
it changed:
- @test/parcel-test-app/src/index.tsx:SpectrumTagGroupProps


  -----------------------------------
  


 packages/@react-types/shared/src/collections.d.ts:ItemRenderer
  
#### packages/@react-types/shared/src/collections.d.ts:ItemRenderer
-type ItemRenderer = {
-  (T) => ItemElement<T>
-}
it changed:
- @test/parcel-test-app/src/index.tsx:SpectrumTagGroupProps


  -----------------------------------
  


 packages/@react-types/shared/src/collections.d.ts:SectionProps
  
#### packages/@react-types/shared/src/collections.d.ts:SectionProps
-
-interface SectionProps {
-title?: ReactNode
-aria-label?: string
-children: ItemElement<T> | Array<ItemElement<T>> | ItemRenderer<T>
-items?: Iterable<T>
-}
it changed:
- @test/parcel-test-app/src/index.tsx:SpectrumTagGroupProps


  -----------------------------------
  


 packages/@react-types/shared/src/collections.d.ts:SectionElement
  
#### packages/@react-types/shared/src/collections.d.ts:SectionElement
-type SectionElement = {
-  ReactElement<SectionProps<T>>
-}
it changed:
- @test/parcel-test-app/src/index.tsx:SpectrumTagGroupProps


  -----------------------------------
  


 packages/@react-types/shared/src/collections.d.ts:CollectionElement
  
#### packages/@react-types/shared/src/collections.d.ts:CollectionElement
-type CollectionElement = {
-  SectionElement<T> | ItemElement<T>
-}
it changed:
- @test/parcel-test-app/src/index.tsx:SpectrumTagGroupProps


  -----------------------------------
  


 packages/@react-types/shared/src/collections.d.ts:CollectionChildren
  
#### packages/@react-types/shared/src/collections.d.ts:CollectionChildren
-type CollectionChildren = {
-  CollectionElement<T> | Array<CollectionElement<T>> | (T) => CollectionElement<T>
-}
it changed:
- @test/parcel-test-app/src/index.tsx:SpectrumTagGroupProps


  -----------------------------------
  


 packages/@react-types/shared/src/key.d.ts:Key
  
#### packages/@react-types/shared/src/key.d.ts:Key
-type Key = {
-  string | number
-}
it changed:
- @test/parcel-test-app/src/index.tsx:SpectrumTagGroupProps


  -----------------------------------
  


 packages/@react-types/shared/src/selection.d.ts:Selection
  
#### packages/@react-types/shared/src/selection.d.ts:Selection
-type Selection = {
-  'all' | Set<Key>
-}
it changed:
- @test/parcel-test-app/src/index.tsx:SpectrumTagGroupProps


  -----------------------------------
  


 packages/@react-types/shared/src/selection.d.ts:SelectionBehavior
  
#### packages/@react-types/shared/src/selection.d.ts:SelectionBehavior
-type SelectionBehavior = {
-  'toggle' | 'replace'
-}
it changed:
- @test/parcel-test-app/src/index.tsx:SpectrumTagGroupProps


  -----------------------------------
  


 packages/@react-types/shared/src/selection.d.ts:SelectionMode
  
#### packages/@react-types/shared/src/selection.d.ts:SelectionMode
-type SelectionMode = {
-  'none' | 'single' | 'multiple'
-}
it changed:
- @test/parcel-test-app/src/index.tsx:SpectrumTagGroupProps


  -----------------------------------
  


 packages/@react-types/shared/src/inputs.d.ts:ValidationError
  
#### packages/@react-types/shared/src/inputs.d.ts:ValidationError
-type ValidationError = {
-  string | Array<string>
-}
it changed:
- @test/parcel-test-app/src/index.tsx:SpectrumTagGroupProps


  -----------------------------------
  


  ### @test/parcel-test-app/src/index.tsx:SpectrumTagGroupProps
  
#### @test/parcel-test-app/src/index.tsx:SpectrumTagGroupProps
changed by:
- packages/@react-types/shared/src/dom.d.ts:RouterConfig
 packages/@react-types/shared/src/dom.d.ts:Href
 packages/@react-types/shared/src/dom.d.ts:RouterOptions
 packages/@react-types/shared/src/collections.d.ts:ItemProps
 packages/@react-types/shared/src/collections.d.ts:ItemElement
 packages/@react-types/shared/src/collections.d.ts:ItemRenderer
 packages/@react-types/shared/src/collections.d.ts:SectionProps
 packages/@react-types/shared/src/collections.d.ts:SectionElement
 packages/@react-types/shared/src/collections.d.ts:CollectionElement
 packages/@react-types/shared/src/collections.d.ts:CollectionChildren
 packages/@react-types/shared/src/key.d.ts:Key
 packages/@react-types/shared/src/selection.d.ts:Selection
 packages/@react-types/shared/src/selection.d.ts:SelectionBehavior
 packages/@react-types/shared/src/selection.d.ts:SelectionMode
 packages/@react-types/shared/src/inputs.d.ts:ValidationError

+SpectrumTagGroupProps<T> {
+  actionLabel?: string
+  aria-describedby?: string
+  aria-details?: string
+  aria-label?: string
+  aria-labelledby?: string
+  children: CollectionChildren<T>
+  defaultSelectedKeys?: 'all' | Iterable<Key>
+  description?: ReactNode
+  disabledKeys?: Iterable<Key>
+  disallowEmptySelection?: boolean
+  errorMessage?: ReactNode
+  id?: string
+  isDisabled?: boolean
+  isInvalid?: boolean
+  isRequired?: boolean
+  items?: Iterable<T>
+  label?: ReactNode
+  onAction?: () => void
+  onRemove?: (Set<Key>) => void
+  onSelectionChange?: (Selection) => void
+  selectedKeys?: 'all' | Iterable<Key>
+  selectionBehavior?: SelectionBehavior
+  selectionMode?: SelectionMode
+  validate?: (T) => ValidationError | boolean | null | undefined
+  validationBehavior?: 'aria' | 'native' = 'aria'
+}

  -----------------------------------
  "
`;
