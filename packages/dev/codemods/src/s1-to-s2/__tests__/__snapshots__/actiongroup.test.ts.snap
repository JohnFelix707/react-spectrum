// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Comments out unsupported props 1`] = `
"import { ActionButtonGroup, ActionButton, ActionGroup } from "@react-spectrum/s2";
import { Item } from '@adobe/react-spectrum';
// TODO(S2-upgrade): overflowMode has not been implemented yet.
// TODO(S2-upgrade): buttonLabelBehavior has not been implemented yet.
// TODO(S2-upgrade): summaryIcon has not been implemented yet.
<ActionButtonGroup>
  <ActionButton key="add">Add</Item>
  <ActionButton key="delete">Delete</Item>
  <ActionButton key="edit">Edit</Item>
</ActionButtonGroup>"
`;

exports[`Converts ActionGroup to ActionButtonGroup 1`] = `
"import { ActionButtonGroup, ActionButton, ActionGroup } from "@react-spectrum/s2";
import { Item } from '@adobe/react-spectrum';
<ActionButtonGroup>
  <ActionButton key="add" onPress={() => onAction("add")}>Add</Item>
  <ActionButton key="delete" onPress={() => onAction("delete")}>Delete</Item>
  <ActionButton key="edit" onPress={() => onAction("edit")}>Edit</Item>
</ActionButtonGroup>"
`;

exports[`Converts ActionGroup to ActionButtonGroup with disabledKeys 1`] = `
"import { ActionButtonGroup, ActionButton, ActionGroup } from "@react-spectrum/s2";
import { Item } from '@adobe/react-spectrum';

function Example({disabledKeys}) {
  let _disabledKeys = new Set(disabledKeys);
  return (
    (<ActionButtonGroup>
      <ActionButton
        key="add"
        onPress={() => onAction("add")}
        isDisabled={_disabledKeys?.has("add")}>Add</Item>
      <ActionButton
        key="delete"
        onPress={() => onAction("delete")}
        isDisabled={_disabledKeys?.has("delete")}>Delete</Item>
      <ActionButton
        key="edit"
        onPress={() => onAction("edit")}
        isDisabled={_disabledKeys?.has("edit")}>Edit</Item>
    </ActionButtonGroup>)
  );
}"
`;

exports[`Converts ActionGroup to ActionButtonGroup with dynamic collections 1`] = `
"import { ActionButtonGroup, ActionButton, ActionGroup } from "@react-spectrum/s2";
import { Item } from '@adobe/react-spectrum';
<ActionButtonGroup>
  {items.map(
    item => <ActionButton key={item.key ?? item.id} onPress={() => onAction(item.key ?? item.id)}>{item.name}</Item>
  )}
</ActionButtonGroup>"
`;

exports[`Converts ActionGroup to ActionButtonGroup with dynamic collections and custom key 1`] = `
"import { ActionButtonGroup, ActionButton, ActionGroup } from "@react-spectrum/s2";
import { Item } from '@adobe/react-spectrum';
<ActionButtonGroup>
  {items.map(
    item => <ActionButton key={item._id} onPress={() => onAction(item._id)}>{item.name}</Item>
  )}
</ActionButtonGroup>"
`;

exports[`Converts ActionGroup to ToggleButtonGroup 1`] = `
"import { ToggleButtonGroup, ToggleButton, ActionGroup } from "@react-spectrum/s2";
  import { Item } from '@adobe/react-spectrum';
  <ToggleButtonGroup selectionMode="single" onSelectionChange={onSelectionChange}>
    <ToggleButton id="add">Add</Item>
    <ToggleButton id="delete">Delete</Item>
    <ToggleButton id="edit">Edit</Item>
  </ToggleButtonGroup>"
`;

exports[`Converts ActionGroup to ToggleButtonGroup with disabledKeys 1`] = `
"import { ToggleButtonGroup, ToggleButton, ActionGroup } from "@react-spectrum/s2";
import { Item } from '@adobe/react-spectrum';

function Example({disabledKeys}) {
  let _disabledKeys = new Set(disabledKeys);
  return (
    (<ToggleButtonGroup selectionMode="single" onSelectionChange={onSelectionChange}>
      <ToggleButton id="add" isDisabled={_disabledKeys?.has("add")}>Add</Item>
      <ToggleButton id="delete" isDisabled={_disabledKeys?.has("delete")}>Delete</Item>
      <ToggleButton id="edit" isDisabled={_disabledKeys?.has("edit")}>Edit</Item>
    </ToggleButtonGroup>)
  );
}"
`;

exports[`Converts ActionGroup to ToggleButtonGroup with dynamic collections 1`] = `
"import { ToggleButtonGroup, ToggleButton, ActionGroup } from "@react-spectrum/s2";
  import { Item } from '@adobe/react-spectrum';
  <ToggleButtonGroup selectionMode="single" onSelectionChange={onSelectionChange}>
    {items.map(
      item => <ToggleButton key={item.key ?? item.id} id={item.key ?? item.id}>{item.name}</Item>
    )}
  </ToggleButtonGroup>"
`;

exports[`Converts ActionGroup to ToggleButtonGroup with dynamic collections and custom key 1`] = `
"import { ToggleButtonGroup, ToggleButton, ActionGroup } from "@react-spectrum/s2";
  import { Item } from '@adobe/react-spectrum';
  <ToggleButtonGroup selectionMode="single" onSelectionChange={onSelectionChange}>
    {items.map(item => <ToggleButton key={item._id} id={item._id}>{item.name}</Item>)}
  </ToggleButtonGroup>"
`;
