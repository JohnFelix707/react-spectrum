.my-overlay {
  position: fixed;
  inset: 0;
  background: rgba(0 0 0 / .5);

  &[data-entering] {
    animation: fade 5000ms;
  }

  &[data-exiting] {
    animation: fade 5000ms reverse ease-in;
  }
}

@keyframes fade {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}


.my-modal {
  position: fixed;
  top: 0;
  bottom: 0;
  right: 0;
  width: 250px;
  background: seashell;
  outline: none;
  padding: 30px;
  border-left: 1px solid var(--spectrum-global-color-gray-400);
  box-shadow: -8px 0 20px rgba(0 0 0 / 0.1);

  &[data-entering] {
    animation: slide 5000ms;
  }

  &[data-exiting] {
    animation: slide 5000ms reverse ease-in;
  }
}

@keyframes blur {
  from {
    background: rgba(45 0 0 / 0);
    backdrop-filter: blur(0);
  }

  to {
    background: rgba(45 0 0 / .3);
    backdrop-filter: blur(10px);
  }
}

@keyframes slide {
  from {
    transform: translateX(100%);
  }

  to {
    transform: translateX(0);
  }
}

:global(.react-aria-Table) {
  border-collapse: collapse;
  table-layout: fixed;
  width: fit-content;
}

:global(.react-aria-Cell) {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

:global(.react-aria-ColumnResizer) {
  width: 15px;
  background-color: grey;
  height: 30px;
  touch-action: none;
  flex: 0 0 auto;
  box-sizing: border-box;
  border: 5px;
  border-style: none solid;
  border-color: transparent;
  background-clip: content-box;

  &[data-resizable-direction=both] {
    cursor: ew-resize;
  }

  &[data-resizable-direction=left] {
    cursor: e-resize;
  }

  &[data-resizable-direction=right] {
    cursor: w-resize;
  }
}

:global(.react-aria-ColumnResizer)[data-focus-visible] {
  background-color: orange;
}

:global(.react-aria-ColumnResizer)[data-resizing] {
  border-color: orange;
  background-color: transparent;
}
